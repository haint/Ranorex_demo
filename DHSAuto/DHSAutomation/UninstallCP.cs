///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace DHSAutomation
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The UninstallCP recording.
    /// </summary>
    [TestModule("a92f1822-76f7-426e-9dd1-05030ce7d390", ModuleType.Recording, 1)]
    public partial class UninstallCP : ITestModule
    {
        /// <summary>
        /// Holds an instance of the DHSAutomationRepository repository.
        /// </summary>
        public static DHSAutomationRepository repo = DHSAutomationRepository.Instance;

        static UninstallCP instance = new UninstallCP();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public UninstallCP()
        {
            isConfirmManualSteps = "True";
            versionApp = "2.2.26.0";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static UninstallCP Instance
        {
            get { return instance; }
        }

#region Variables

        string _isConfirmManualSteps;

        /// <summary>
        /// Gets or sets the value of variable isConfirmManualSteps.
        /// </summary>
        [TestVariable("3bcf820f-34de-40d9-b198-07b8d76ca3d8")]
        public string isConfirmManualSteps
        {
            get { return _isConfirmManualSteps; }
            set { _isConfirmManualSteps = value; }
        }

        string _versionApp;

        /// <summary>
        /// Gets or sets the value of variable versionApp.
        /// </summary>
        [TestVariable("9d6be490-6ecb-4daf-9d2f-06011b14e2b0")]
        public string versionApp
        {
            get { return _versionApp; }
            set { _versionApp = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.0")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.0")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Taskbar.Start' at 19;39.", repo.Taskbar.StartInfo, new RecordItemIndex(0));
            repo.Taskbar.Start.Click("19;39");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'control{Space}panel{Return}'.", new RecordItemIndex(1));
            Keyboard.Press("control{Space}panel{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ControlPanel.CPanel.Programs' at 30;13.", repo.ControlPanel.CPanel.ProgramsInfo, new RecordItemIndex(2));
            repo.ControlPanel.CPanel.Programs.Click("30;13");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ControlPanel.Programs.ProgramsAndFeatures' at 83;10.", repo.ControlPanel.Programs.ProgramsAndFeaturesInfo, new RecordItemIndex(3));
            repo.ControlPanel.Programs.ProgramsAndFeatures.Click("83;10");
            Delay.Milliseconds(200);
            
            chooseToUninstall();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ControlPanel.ProgramsAndFeatures.ButtonUninstall' at 27;13.", repo.ControlPanel.ProgramsAndFeatures.ButtonUninstallInfo, new RecordItemIndex(5));
            repo.ControlPanel.ProgramsAndFeatures.ButtonUninstall.Click("27;13");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DellHelpSupportInstallShieldWizar.ButtonYes' at 54;23.", repo.DellHelpSupportInstallShieldWizar.ButtonYesInfo, new RecordItemIndex(6));
            repo.DellHelpSupportInstallShieldWizar.ButtonYes.Click("54;23");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 500ms.", new RecordItemIndex(7));
            Delay.Duration(500, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'UninstallComplete.Finish' at 25;7.", repo.UninstallComplete.FinishInfo, new RecordItemIndex(8));
            repo.UninstallComplete.Finish.Click("25;7");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ControlPanel.ProgramsAndFeatures.Close' at 16;15.", repo.ControlPanel.ProgramsAndFeatures.CloseInfo, new RecordItemIndex(9));
            repo.ControlPanel.ProgramsAndFeatures.Close.Click("16;15");
            Delay.Milliseconds(200);
            
            checkDHSIconOnDesktop();
            Delay.Milliseconds(0);
            
            checkDHSIconOnAllApps();
            Delay.Milliseconds(0);
            
            checkDHSIconOnStartMenu();
            Delay.Milliseconds(0);
            
            ConfirmInstallationCriteria();
            Delay.Milliseconds(0);
            
            checkRegistryKeyExist();
            Delay.Milliseconds(0);
            
            checkService();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

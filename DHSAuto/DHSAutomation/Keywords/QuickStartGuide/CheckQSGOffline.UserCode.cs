///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
// 
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;

using DHSAutomation.Common;
using DHSAutomation.Objects;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;

namespace DHSAutomation.Keywords.QuickStartGuide
{
	public partial class CheckQSGOffline
	{
		/// <summary>
		/// This method gets called right after the recording has been started.
		/// It can be used to execute recording specific initialization code.
		/// </summary>
		private void Init()
		{
			// Your recording specific initialization code goes here.
		}

		public void ClickManualsTab()
		{
			DHSTranslateReader reader = new DHSTranslateReader();
			Dictionary<string, string> leftmenutexts = reader.GetLeftMenuText();
			string manuals = leftmenutexts["Manuals"];
			Text manualsTab = repo.DHSMainWindow.LeftMenuListbox.FindSingle<Text>(@"./listitem/text[@text='"+manuals+"']");
			manualsTab.Click();
			Delay.Milliseconds(2000);
		}

		public void ClickViewAllManuals()
		{
			DHSTranslateReader reader = new DHSTranslateReader();
			Dictionary<string, string> navPanel = reader.GetNavigationPanelText("Manuals");
			string viewAllManuals = navPanel["ViewAllManuals"];
			viewAllManuals = viewAllManuals.Replace(@"{0}", Utils.GetPlatformName());
			Text viewAllText = repo.DHSMainWindow.NavigationPanel.FindSingle<Text>(@"./button/text[@text='"+viewAllManuals+"']");
			viewAllText.Click();
			Delay.Milliseconds(2000);
		}

		public void CheckOfflineMessage()
		{
			MessageBoxManualsOffline.WaitForExist();
		}
		
		public void CheckNotNow(){
			MessageBoxManualsOffline.ClickNotNow();
		}

		public void CheckGetOnline(){
			MessageBoxManualsOffline.ClickGetOnline();
			DHSCategory.CheckCategoryOnLeftMenu("Connecting to Wireless and Accessories");
			DHSArticle.CheckArticleOnContentPanel("Connecting to Wireless and Accessories",
			                                      "Wireless troubleshooting");
		}
	}
}
///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
// 
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;

namespace DHSAutomation.Keywords.TelemetryEventsCheckFromDAWS
{
	public partial class OpenDellHelpAndSupport
	{
		/// <summary>
		/// This method gets called right after the recording has been started.
		/// It can be used to execute recording specific initialization code.
		/// </summary>
		private void Init()
		{
			// Your recording specific initialization code goes here.
		}

		public void OpenApp()
		{
			
			try{
				repo.Start.AppsList.Click(new Location(AppsList_Screenshot2, "12;15", AppsList_Screenshot2_Options));
				Delay.Milliseconds(200);
				
				if (repo.DHSForm.SelfInfo.Exists(30000)) Report.Success("Open DHS successfully.");
				else Report.Failure("Cannot open DHS.");
				
			}
			catch(RanorexException){
				Report.Log(ReportLevel.Failure, "Cannot open DHS from Start menu.");
			}
		}

        public void MergedUserCodeMethod()
        {
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click button 'Start'.");
            repo.Taskbar.Start.Click();
            Delay.Seconds(3);
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item '#'.");
            repo.Start.ContainerHash.Click();
            Delay.Seconds(3);
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'D'.");
            repo.Start.TextD.Click();
            Delay.Seconds(3);
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}'.");
            Keyboard.Press("{Return}");
            OpenApp();
        }
		#region Image Feature Data
		CompressedImage AppsList_Screenshot1
		{ get { return repo.Start.AppsListInfo.GetScreenshot1(new Rectangle(27, 51, 8, 8)); } }

		Imaging.FindOptions AppsList_Screenshot1_Options
		{ get { return Imaging.FindOptions.Default; } }

		CompressedImage AppsList_Screenshot2
		{ get { return repo.Start.AppsListInfo.GetScreenshot2(new Rectangle(31, 81, 18, 19)); } }

		Imaging.FindOptions AppsList_Screenshot2_Options
		{ get { return Imaging.FindOptions.Default; } }
		#endregion
	}
}
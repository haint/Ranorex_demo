///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
// 
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using System.Windows.Forms;
using WinForms = System.Windows.Forms;
using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;

namespace DHSAutomation.Keywords.LaunchOtherSW
{
    public partial class DellUpdateInstall
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }
        
        public void Install ()
        {
        	
        	string[] exeList = Directory.GetFiles(@"./Resources/", "DellUpdate*");
        	

        	if (repo.DHSForm.DellUpdateText1Info.Exists(15000) && repo.DHSForm.DellUpdateText2Info.Exists(15000)&&repo.DHSForm.INSTALLInfo.Exists(15000))
        	{
        		Report.Success("Dell update text displayed correctly");
        	}
        	
    
        	if (exeList.Length!=0) 
        	{
        		File.Delete(exeList[0]);
        		
        		Delay.Seconds(15);
        	}
        	
        	
        	repo.DHSForm.INSTALL.Click();
        	Delay.Seconds(2);
        	Keyboard.Press("{ENTER}");
        	Delay.Seconds(2);
        	
        	Keyboard.Press("{TAB 2}");
        	Delay.Seconds(1);
        	Keyboard.Press("{ENTER}");
        	
        	Delay.Seconds(2);
        	repo.SaveAs.Item202.Click();
			Delay.Seconds(2);
        	
        	Keyboard.Press(Directory.GetCurrentDirectory() + "\\Resources\\");
        	Delay.Seconds(2);

        	Keyboard.Press("{ENTER}");
        	Delay.Seconds(2);
        	repo.SaveAs.Save.Click();
        	Delay.Seconds(20);
        	repo.MicrosoftEdge.Self.As<Ranorex.Form>().Close();
        	
        	exeList = Directory.GetFiles(@"./Resources/", "DellUpdate*");
        	if (exeList.Length>0) Report.Success("Dell Update download successfull");
        	else Report.Failure("Dell Update download failure");
        	
        	exeList = Directory.GetFiles(@"./Resources/Installer", "DellUpdate*");
        	
        	
        	Process.Start(Directory.GetCurrentDirectory()+ exeList[0]);
        	
        	Delay.Seconds(5);
        	
        	if (repo.DellUpdate17Setup.SelfInfo.Exists(15000))
        	{
        		repo.DellUpdate17Setup.ButtonInstall.Click();
        		Delay.Seconds(30);
        		repo.DellUpdate17Setup.ButtonClose.Click();
        		Delay.Seconds(2);
        	}
        	
//        	repo.DellUpdateSetup.Next.Click();
//        	Delay.Seconds(2);
//        	repo.DellUpdateSetup.CheckNext.Click();
//        	Delay.Seconds(2);
//        	repo.DellUpdateSetup.Next.Click();
//        	Delay.Seconds(2);
//        	repo.DellUpdateSetup.ButtonInstall.Click();
//        	Delay.Seconds(20);
//        	repo.DellUpdateSetup.ButtonFinish.Click();
//        	Delay.Seconds(2);
        	
        	if (File.Exists(@"C:\Program Files (x86)\Dell Update\DellUpService.exe"))
        	{
        		Report.Success("Dell Update install successfull");
        	}else Report.Failure("Dell update install failure");
        	
        }
        

    }
}
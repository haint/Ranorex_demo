///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
// 
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;

namespace DHSAutomation.Keywords.Validation
{
	public partial class CheckDHSAfterMinimize
	{
		/// <summary>
		/// This method gets called right after the recording has been started.
		/// It can be used to execute recording specific initialization code.
		/// </summary>
		private void Init()
		{
			// Your recording specific initialization code goes here.
		}


		public void CheckDHSMinimize(Boolean value)
		{
			Form form= repo.DHSMainWindow.Self.FindSingle<Ranorex.Form>(".");

			if(value==true){
				Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DHSMainWindow.MinmizeImage' at 18;17.", repo.DHSMainWindow.MinmizeImageInfo, new RecordItemIndex(0));
				repo.DHSMainWindow.MinmizeImage.Click();
				Delay.Milliseconds(1000);
				
				string text = form.State.ToString();
				System.Console.WriteLine(text);
				string msg = "DHS should disappear on desktop after click Minimize Button!";
				Report.Log(text=="Minimized"?ReportLevel.Success:ReportLevel.Failure, msg);
				
				
			}else if(value==false){
				repo.Taskbar.DellHelpSupportRunningWindow.Click();
				Delay.Milliseconds(1000);
				
				string text = form.State.ToString();
				System.Console.WriteLine(text);
				string msg = "DHS should appear on desktop after click app on Taskbar!";
				Report.Log(text=="Normal"?ReportLevel.Success:ReportLevel.Failure, msg);

			}
			
		}
		
		public void CheckDHSMinimizeOrRestone(){

			CheckDHSMinimize(true);
			Delay.Milliseconds(500);

			CheckDHSMinimize(false);
			
			
		}

	}
}
///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
// 
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;

namespace DHSAutomation.Keywords.Validation
{
	public partial class CheckTitleDHSAndNoMaximineButton
	{
		/// <summary>
		/// This method gets called right after the recording has been started.
		/// It can be used to execute recording specific initialization code.
		/// </summary>
		private void Init()
		{
			// Your recording specific initialization code goes here.
		}

		public void CheckNoMaximizeButton()
		{
			IList<Picture> lstPic = Host.Local.Find<Ranorex.Picture>(@"/form[@name='Dell Help & Support' and @classname='Window']/button[@automationid='CarouselImageButton']/preceding-sibling::button[@visible='true']/picture");
			int numPic = lstPic.Count;
			
			foreach(Ranorex.Picture pic in lstPic){
				string namePic = pic.GetAttributeValue<string>("AutomationId");
				if(namePic.Contains("MinmizeImage")||namePic.Contains("CloseImage")){
					Report.Log(ReportLevel.Success,"Check button on Mashead "+namePic);
				}else{
					Report.Log(ReportLevel.Failure,"Check button on Mashead "+namePic);
				}
				Delay.Milliseconds(300);
			}
			
		}

        public void Validate_DHSTitle()
        {
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'DHSMainWindow.DHSTitle'.", repo.DHSMainWindow.DHSTitleInfo);
            string msg = "Dell Help & Support launches successfully";
            Report.Log(repo.DHSMainWindow.DHSTitleInfo.Exists(2000)?ReportLevel.Success:ReportLevel.Failure, msg);
        }

	}
}
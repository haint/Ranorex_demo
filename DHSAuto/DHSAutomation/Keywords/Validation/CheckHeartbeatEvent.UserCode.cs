///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
// 
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;

namespace DHSAutomation.Keywords.Validation
{
	public partial class CheckHeartbeatEvent
	{
		/// <summary>
		/// This method gets called right after the recording has been started.
		/// It can be used to execute recording specific initialization code.
		/// </summary>
		private void Init()
		{
			// Your recording specific initialization code goes here.
		}

		public void CheckHeartbeat()
		{
			//search for heartbeat with time near the current date time
			/*
        	Validate.Exists(repo.DellApplicationWebServiceDAWS.TdTagApplicationHeartbeat);
        	// move to element
        	repo.DellApplicationWebServiceDAWS.TdTagApplicationHeartbeat.MoveTo();
        	ATag link = repo.DellApplicationWebServiceDAWS.TdTagApplicationHeartbeat.FindSingle<ATag>("./preceding-sibling::td[1]/a");
        	link.MoveTo(Location.UpperRight);
        	link.Click(Location.UpperRight);
			 */
//			int repeat = 3;
			int step = 0;
			bool found = false;
			do{
				try{
					IList<TrTag> trList = repo.DellApplicationWebServiceDAWS.Self.Find<TrTag>(@".//div[#'daws-body']/table//td[@innertext~'Learning Center']/following-sibling::td[@innertext~'ApplicationHeartbeat']/parent::tr");
					TrTag lastTr = trList[trList.Count - 1];
					lastTr.MoveTo();
					ATag link = lastTr.FindSingle<ATag>("./td[1]/a");
					link.MoveTo();
					link.Click(Location.UpperRight);
					found = true;
					break;
				}
				catch(Exception){
					// delay then refresh
					Delay.Milliseconds(5000);
					Keyboard.Press("{F5}");
					Delay.Milliseconds(10000);
					step++;
				}
			}while(step < 3);
			if(found)
			{
				Report.Success("ApplicationHeartbeat Event is exist.");
			}else{
				Report.Failure("ApplicationHeartbeat Event is not exist.");
			}
			//Report.Log((found==true)?ReportLevel.Success:ReportLevel.Failure, "Check if ApplicationHeartbeat Event exist");
			Delay.Seconds(5);
		}
	}
}
///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
// 
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Drawing;
using System.Globalization;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using System.Xml;

using DHSAutomation.Common;
using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using WinForms = System.Windows.Forms;

namespace DHSAutomation.Keywords.Validation
{
	public partial class CheckLeftMenu
	{
		/// <summary>
		/// This method gets called right after the recording has been started.
		/// It can be used to execute recording specific initialization code.
		/// </summary>
		private void Init()
		{
			// Your recording specific initialization code goes here.
		}
		public void CheckLeftMenuItems()
		{
			CultureInfo ci = Utils.GetOSLanguage();
			
			// get leftmenu item name
			IList<ListItem> listitems = repo.DHSMainWindow.LeftMenuListbox.Find<ListItem>("./listitem");
			
			XmlTextReader reader = new XmlTextReader(Directory.GetCurrentDirectory() + @"\Resources\DHSTranslate.xml");
			// If the node has value
			reader.Read();
			reader.ReadToFollowing("language");
			do {
				if(reader.GetAttribute("code") == ci.Name){
					reader.ReadToDescendant("leftmenu");
					reader.ReadToDescendant("element");
					int i = 0;
					do{
						string expectmenutext = reader.ReadString();
						// get actual menu item text
						ListItem menuitem = listitems[i];
						Text menutext = menuitem.FindSingle("./text");
						string actualmenutext = menutext.TextValue;
						try{
							Validate.AreEqual(actualmenutext, expectmenutext, "Check if Left menu with text \"" + actualmenutext + "\" is in " + ci.DisplayName + " as expected: \"" + expectmenutext + "\"");
							menuitem.Click();
							Delay.Milliseconds(1000);
							repo.DHSMainWindow.ClosePanelImage.Click();
							Delay.Milliseconds(1000);
						}
						catch(RanorexException){
						}
						i++;
					}
					while(reader.ReadToNextSibling("element"));
					break;
				}
			} while (reader.ReadToNextSibling("language"));
		}
	}
}
///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace DHSAutomation.Keywords.Validation
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The CheckSearchFailedResult recording.
    /// </summary>
    [TestModule("d37d296c-6636-416e-acd3-cb692d9a7090", ModuleType.Recording, 1)]
    public partial class CheckSearchFailedResult : ITestModule
    {
        /// <summary>
        /// Holds an instance of the DHSAutomation.DHSAutomationRepository repository.
        /// </summary>
        public static DHSAutomation.DHSAutomationRepository repo = DHSAutomation.DHSAutomationRepository.Instance;

        static CheckSearchFailedResult instance = new CheckSearchFailedResult();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public CheckSearchFailedResult()
        {
            varPlatformname = "3558";
            varServiceTag = "2KM4F32";
            varApplicationName = "Learning Center";
            varAppVersion = "2.2.26.0";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static CheckSearchFailedResult Instance
        {
            get { return instance; }
        }

#region Variables

        string _varPlatformname;

        /// <summary>
        /// Gets or sets the value of variable varPlatformname.
        /// </summary>
        [TestVariable("24adcdbe-8364-4620-8d3c-f20f6f4f23d1")]
        public string varPlatformname
        {
            get { return _varPlatformname; }
            set { _varPlatformname = value; }
        }

        string _varServiceTag;

        /// <summary>
        /// Gets or sets the value of variable varServiceTag.
        /// </summary>
        [TestVariable("267139b4-0a77-4f7b-a93f-dff0d2314f5e")]
        public string varServiceTag
        {
            get { return _varServiceTag; }
            set { _varServiceTag = value; }
        }

        string _varApplicationName;

        /// <summary>
        /// Gets or sets the value of variable varApplicationName.
        /// </summary>
        [TestVariable("8c2432e1-21dd-42b1-89ec-86c00906a8b0")]
        public string varApplicationName
        {
            get { return _varApplicationName; }
            set { _varApplicationName = value; }
        }

        string _varAppVersion;

        /// <summary>
        /// Gets or sets the value of variable varAppVersion.
        /// </summary>
        [TestVariable("72cc83ba-3da0-4fbe-ac5e-4b890517a8cc")]
        public string varAppVersion
        {
            get { return _varAppVersion; }
            set { _varAppVersion = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.0")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.0")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            CheckSearchFailed();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

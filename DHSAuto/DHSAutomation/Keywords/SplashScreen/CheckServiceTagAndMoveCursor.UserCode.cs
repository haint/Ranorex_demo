///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
// 
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;

namespace DHSAutomation.Keywords.SplashScreen
{
    public partial class CheckServiceTagAndMoveCursor
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

        public void ValidateServiceTagTooltip()
        {
			if(isConfirmManualSteps.Equals("True")){
				string msg = "Please check if the information of Service Tag should be showed up when hold tooltip (Yes/No)";
				string msgResult = "The information of Service Tag should be showed up!";
				WinForms.DialogResult result =  WinForms.MessageBox.Show(new WinForms.Form{TopMost = true},
				                                                         msg, "Confirm Step",
				                                                         WinForms.MessageBoxButtons.YesNo,
				                                                         WinForms.MessageBoxIcon.Question,
				                                                         WinForms.MessageBoxDefaultButton.Button1);
				Report.Log(result == WinForms.DialogResult.Yes?ReportLevel.Success:ReportLevel.Failure, msgResult);
				
			}
        }

        public void CheckServiceTagInfo()
        {
        	string serviceTag = repo.DHSMainWindow.ServiceTag.GetAttributeValue<String>("Text");
        	if(serviceTag.Contains(varServiceTag)){
        		Report.Log(ReportLevel.Success, "Service Tag on DHS same as Service Tag of device test!");
        	   }else{
        	   	Report.Log(ReportLevel.Failure, "Service Tag on DHS same as Service Tag of device test!");
        	   }
        }

        public void Mouse_Move_ServiceTagTooltip()
        {
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Move item 'ServiceTag Tool tip'.");
            repo.DHSMainWindow.ServiceTagTooltip.MoveTo();
        }

    }
}